services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cwi-app
    ports:
      - "8000:8000"
    volumes:
      - ./:/var/www/html
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_URL: http://localhost:8000
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      REDIS_HOST: redis
      REDIS_PORT: 6379
      CACHE_DRIVER: redis
      CACHE_STORE: redis
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: redis
      MICROSERVICE_URL: http://microservice:3000
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  microservice:
    build:
      context: ./microservice
      dockerfile: Dockerfile
    container_name: cwi-microservice
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000

  mysql:
    image: mysql:8.0
    container_name: cwi-mysql
    command: ["--default-authentication-plugin=mysql_native_password"]
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./.docker/mysql-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot"]
      interval: 5s
      timeout: 5s
      retries: 20

  redis:
    image: redis:7-alpine
    container_name: cwi-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

volumes:
  db-data:

networks:
  default:
    name: cwi-net
